1、Padding与margin的区别
作用的对象不同

2、VW与百分比
百分比：默认继承父级的宽度
VW:只与设备的大小有关

3、行内与块级元素
行内元素：不换行、不可以设置大小、大小由内容决定
块级元素：独立陈行、设置大小、宽度继承父级宽度
实际上<img/>是行内元素

4、flex布局
.top1{
    background-color: aqua;
    width: 200px;
    height: 200px;
    margin: auto;

}
body{
    display: flex;
}

<body>
<div class="top1">
<h2>flex</h2>
</div>
</body>

5、flex原理（如何分配空间的）
剩余空间按设定的比例进行分配（前提是宽度够的情况下）

6、深拷贝与浅拷贝
1.浅拷贝： 将原对象或原数组的引用直接赋给新对象，
新数组，新对象／数组只是原对象的一个引用
2.深拷贝： 创建一个新的对象和数组，将原对象的各项属性的“值”
（数组的所有元素）拷贝过来，是“值”而不是“引用”

7、手写promise
 promise是异步编程的一种解决方案，比传统的解决方案-回调函数和事件-更合理和更强大，
 状态：pending：1、value->Fulfilled
                2、error->Rejected

8、 防抖-->将多次操作变成一次 在固定的时间内事件只允许发生一次
   节流-----一定时间内只调用一次函数，一定时间内的多个事件合为一个
      
9、vue不会直接操作dom ,靠的是数据驱动

10、虚拟dom是什么？
1）虚拟dom是vue2.x版本以上才有的
2）本质是js对===>跨平台

<template>
<ul>
    <li>1</li>
    <li>2</li>
</ul>
</template>

11、虚拟dom在vue中做了什么？【vue的渲染过程（html,css,js）】
1）将真实dom转化为虚拟dom(js对象)
2）更新的时候作对比

12、虚拟dom是如何提升vue效率的？
  组件化  数据驱动
  1）局部更新（节点数据）
  2）将直接操作dom的地方拿到两个js对象，找到差异更新


  13、【vue应用层原理】
  1）$nextTick()
  dom更新之后延迟回调
  A=>B
  $nextTick({
    this.$refs.b.dn()
  })
 
  2）单页面与多页面的区别及优缺点
   单页（SPA）:只有一个主页面的应用
             组件=>页面片段
             vue中页面跳转只能刷新局部资源
             场景：PC端
        优点：体验好，快
              改动内容，不用加载整个页面
              前后端分离
              效果可以很炫酷
        缺点：不利于SEO
              初次加载比较慢
              页面复杂度高

    多页应用：整页刷新

 14、v-if 与v-for
 v-for优先级>v-if

 15、Vue-router与location.herf有什么区别？
   location.herf：简单方便，刷新页面（外链）
   Vue-router：实现了按需加载，减少了dom消耗（内部页面） ==>js原生history

16、前端十大经典算法
（一）
a.代理模式【加载的时候用，比如预加载】
b.单例模式 【保证一个类仅有一个实例，有新的就干掉之前的老的】
c.中介者模式【对象解耦】
d.发布-订阅模式【代码解耦，一对多，一个改变通知所有依赖于它的对象】
e.策略模式【算法封装，重复调用】
f.职责链模式【对象查找】
（二）
g.状态模式
h.模板方法模式
i.装饰者模式
j.迭代器模式




